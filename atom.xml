<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Perror</title>
  
  <subtitle>It&#39;s Perror</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-02-18T12:15:49.992Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Perror</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>install fluxcd in k8s 1.25.5</title>
    <link href="http://example.com/2023/02/18/install-fluxcd-in-k8s-1-25-5/"/>
    <id>http://example.com/2023/02/18/install-fluxcd-in-k8s-1-25-5/</id>
    <published>2023-02-18T18:04:41.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;ol&gt;
&lt;li&gt;install the flux cli: &lt;code&gt;brew install fluxcd/tap/flux&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;show the flux cli version: &lt;code&gt;flux version&lt;/code&gt;&lt;pre</summary>
        
      
    
    
    
    
    <category term="devops" scheme="http://example.com/tags/devops/"/>
    
    <category term="k8s" scheme="http://example.com/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>mysql error: rec.cc:391 thread </title>
    <link href="http://example.com/2023/02/18/mysql-error-rec-cc-391-thread/"/>
    <id>http://example.com/2023/02/18/mysql-error-rec-cc-391-thread/</id>
    <published>2023-02-18T18:04:12.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;This error only in the mysql 8.0.30 version.see &lt;a</summary>
        
      
    
    
    
    
    <category term="bug" scheme="http://example.com/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>如何清理 Kubernetes namespace 中的 finalizers 并成功删除 argocd namespace</title>
    <link href="http://example.com/2023/02/18/ru-he-qing-li-kubernetes-namespace-zhong-de-finalizers-bing-cheng-gong-shan-chu-argocd-namespace/"/>
    <id>http://example.com/2023/02/18/ru-he-qing-li-kubernetes-namespace-zhong-de-finalizers-bing-cheng-gong-shan-chu-argocd-namespace/</id>
    <published>2023-02-18T18:03:14.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;在删除 Kubernetes 集群中的资源时，我遵循以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;删除所有 &lt;code&gt;deploy&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;删除所有 &lt;code&gt;configmap&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;删除所有</summary>
        
      
    
    
    
    
    <category term="devops" scheme="http://example.com/tags/devops/"/>
    
    <category term="k8s" scheme="http://example.com/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>helm 报错：another operation (install/upgrade/rollback) is in progress处理方法</title>
    <link href="http://example.com/2023/02/18/helm-bao-cuo-another-operation-install-upgrade-rollback-is-in-progress-chu-li-fang-fa/"/>
    <id>http://example.com/2023/02/18/helm-bao-cuo-another-operation-install-upgrade-rollback-is-in-progress-chu-li-fang-fa/</id>
    <published>2023-02-18T18:01:54.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;使用flux cd来管理helmreleases&lt;/p&gt;
&lt;h3 id=&quot;错误信息&quot;&gt;&lt;a href=&quot;#错误信息&quot;</summary>
        
      
    
    
    
    
    <category term="devops" scheme="http://example.com/tags/devops/"/>
    
    <category term="k8s" scheme="http://example.com/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>k8s PVC自动扩容实践</title>
    <link href="http://example.com/2023/02/18/k8s-pvc-zi-dong-kuo-rong-shi-jian/"/>
    <id>http://example.com/2023/02/18/k8s-pvc-zi-dong-kuo-rong-shi-jian/</id>
    <published>2023-02-18T17:54:22.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
    <summary type="html">&lt;p&gt;依赖:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;k8s &amp;gt;= 1.24&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/topolvm/pvc-autoresizer&quot;&gt;pvc-autoresizer&lt;/a&gt; &amp;gt;= 0.5.0&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;一、安装 pvc-autoresizer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;build  and push docker 镜像 &lt;code&gt;git clone https://github.com/topolvm/pvc-autoresizer &amp;amp;&amp;amp; git checkout v0.5.0 &amp;amp;&amp;amp; cd pvc-autoresizer &amp;amp;&amp;amp; docker build -t pvc-autoresizer:0.5.0 . &amp;amp;&amp;amp; docker push pvc-autoresizer:0.5.0&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加 helm repo: &lt;code&gt;helm repo add pvc-autoresizer https://topolvm.github.io/pvc-autoresizer/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    
    <category term="devops" scheme="http://example.com/tags/devops/"/>
    
    <category term="k8s" scheme="http://example.com/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>redis的一些小知识</title>
    <link href="http://example.com/2023/02/18/redis-de-yi-xie-xiao-zhi-shi/"/>
    <id>http://example.com/2023/02/18/redis-de-yi-xie-xiao-zhi-shi/</id>
    <published>2023-02-18T17:53:52.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
    <summary type="html">&lt;h4 id=&quot;redis的数据类型使用场合？&quot;&gt;&lt;a href=&quot;#redis的数据类型使用场合？&quot; class=&quot;headerlink&quot; title=&quot;redis的数据类型使用场合？&quot;&gt;&lt;/a&gt;redis的数据类型使用场合？&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;string：其value可以储存string以及数字类型，一般用于复杂的技术功能上。&lt;/li&gt;
&lt;li&gt;hash：其value存放的是结构化的对象，它可以能方便的去操作某个字段，我使用他实现过用户行为数据缓存以及session功能。&lt;/li&gt;
&lt;li&gt;list：类似python中的list数据类型，我一般使用他做消息队列或者分页功能。&lt;/li&gt;
&lt;li&gt;set：该数据结构储存的是一系列无序、不重复的数据，这个还提供差集、交集等等功能， 我使用它为爬虫去重以及用户阅读过的文章功能。&lt;/li&gt;
&lt;li&gt;sorted sort：有序集合储存一系列有序，不重复的数据，大多数场景都使用他做一个榜单的功能。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
    <category term="redis" scheme="http://example.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>cast类型转换库—go库推荐</title>
    <link href="http://example.com/2023/02/18/cast-lei-xing-zhuan-huan-ku-go-ku-tui-jian/"/>
    <id>http://example.com/2023/02/18/cast-lei-xing-zhuan-huan-ku-go-ku-tui-jian/</id>
    <published>2023-02-18T17:53:10.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
    <summary type="html">&lt;p&gt;golang 中各种类型之间的转换实在是太过于繁琐，但是类型转换偏偏又是我们在开发过程中最常用的操作。同类型之间转换还稍微好一点，可以使用内置类型函数进行转换，但是想要转换不同的类型却需要引入不同的库， 而 cast 库正好解决了这一痛点，它提供了很多种的类型转换函数同我们使用， 通常的类型转换我们只需要引入这一个库就可以解决。&lt;/p&gt;</summary>
    
    
    
    
    <category term="golang" scheme="http://example.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>redis sds详解</title>
    <link href="http://example.com/2023/02/18/sds-xiang-jie/"/>
    <id>http://example.com/2023/02/18/sds-xiang-jie/</id>
    <published>2023-02-18T17:52:22.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
    <summary type="html">&lt;h3 id=&quot;什么是SDS？&quot;&gt;&lt;a href=&quot;#什么是SDS？&quot; class=&quot;headerlink&quot; title=&quot;什么是SDS？&quot;&gt;&lt;/a&gt;什么是SDS？&lt;/h3&gt;&lt;p&gt;SDS是redis构建的一种抽象类型，主要用于储存redis的默认字符串表示、AOF模块中的AOF缓冲区、客户端状态输入缓冲区。&lt;/p&gt;</summary>
    
    
    
    
    <category term="redis" scheme="http://example.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>go的channel详解</title>
    <link href="http://example.com/2023/02/18/go-de-channel-xiang-jie/"/>
    <id>http://example.com/2023/02/18/go-de-channel-xiang-jie/</id>
    <published>2023-02-18T17:51:42.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
    <summary type="html">&lt;p&gt;此片文章基于&lt;a href=&quot;https://studygolang.com/dl/golang/go1.12.1.src.tar.gz&quot;&gt;golang 1.12.1&lt;/a&gt;版本源码解析而成，chan源码位于go/src/runtime/chan.go文件中。&lt;/p&gt;</summary>
    
    
    
    
    <category term="golang" scheme="http://example.com/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>python IO多路复用实践</title>
    <link href="http://example.com/2023/02/18/io-duo-lu-fu-yong-shi-jian/"/>
    <id>http://example.com/2023/02/18/io-duo-lu-fu-yong-shi-jian/</id>
    <published>2023-02-18T17:51:02.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近几天一直在看tornado源码，发现torando虽然标榜使用异步模型实现， 但是实际上是使用IO多路复用实现的事件循环，为了能对 IO多路复用加深印象，决定自己实现一个简易的HTTP客户端对比一下同步客户端和IO多路复用客户端的性能差别。&lt;/p&gt;</summary>
    
    
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python dict</title>
    <link href="http://example.com/2023/02/18/dict/"/>
    <id>http://example.com/2023/02/18/dict/</id>
    <published>2023-02-18T17:47:55.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;python的dict是一种映射类型, 底层使用了哈希表的方式来储存数据,</summary>
        
      
    
    
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python深拷贝浅拷贝</title>
    <link href="http://example.com/2023/02/18/python-shen-kao-bei-qian-kao-bei/"/>
    <id>http://example.com/2023/02/18/python-shen-kao-bei-qian-kao-bei/</id>
    <published>2023-02-18T17:46:25.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;说到python中的对象拷贝问题，还得看看is和==的区别：&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a =</summary>
        
      
    
    
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python内置函数</title>
    <link href="http://example.com/2017/12/15/python-nei-zhi-han-shu/"/>
    <id>http://example.com/2017/12/15/python-nei-zhi-han-shu/</id>
    <published>2017-12-15T17:21:05.000Z</published>
    <updated>2023-02-18T12:15:49.992Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;abs(x): 接受一个整数或浮点数作为参数，返回该参数的绝对值，如果该参数是一个复数，则返回复数的模。&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code</summary>
        
      
    
    
    
    
    <category term="python" scheme="http://example.com/tags/python/"/>
    
    <category term="技术" scheme="http://example.com/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>
